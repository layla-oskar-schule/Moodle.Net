name: Build and Publish

on:
    release:
        types:
            - created

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Setup NuGet
              uses: NuGet/setup-nuget@v1.0.5

            - name: Restore dependencies
              run: nuget restore ./Moodle.Net.sln

            - name: Setup .NET
              uses: actions/setup-dotnet@v2
              with:
                  dotnet-version: '7.x'

            - name: Build
              run: dotnet build Moodle.Net/Moodle.Net.csproj -c Release

    test:
        runs-on: ubuntu-latest

        needs: [build]

        steps:
            - name: Checkout Code
              uses: actions/checkout@v2

            - name: Set up .Net
              uses: actions/setup-dotnet@v2

            - name: Run tests
              run: dotnet test ./Moodle.Net.sln /p:Configuration=Release --no-restore --no-build --verbosity normal

    deploy:
        runs-on: ubuntu-latest

        needs: [test]

        steps:
            - name: Checkout Code
              uses: actions/checkout@v2

            - name: Set NuGet package version
              run: echo "::set-env name=PACKAGE_VERSION::$(echo ${{ github.ref }} | sed 's/refs\/tags\///')"

            - name: Set up .Net
              uses: actions/setup-dotnet@v2

            - name: Create NuGet package
              run: dotnet pack Moodle.Net/Moodle.Net.csproj -c Release /p:Version=$PACKAGE_VERSION

            - name: Deploy on NuGet.org
              run: |
                  cd Moodle.Net/bin/Release
                  dotnet nuget push ./bin/Release/*.nupkg -k ${{ secrets.NUGET_APIKEY }} -s https://api.nuget.org/v3/index.json
