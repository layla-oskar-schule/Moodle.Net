name: Build and Publish

on:
    release:
        types:
            - created

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Setup NuGet
              uses: NuGet/setup-nuget@v1.0.5

            - name: Restore dependencies
              run: nuget restore ./Moodle.Net.sln

            - name: Setup .NET
              uses: actions/setup-dotnet@v2
              with:
                  dotnet-version: '7.x'

            - name: Build
              run: dotnet build Moodle.Net/Moodle.Net.csproj --no-restore -c Release

    test:
        runs-on: ubuntu-latest

        needs: [build]

        steps:
            - name: Checkout Code
              uses: actions/checkout@v2

            - name: Run tests
              run: dotnet test ./Moodle.Net.sln /p:Configuration=Release --no-restore --no-build --verbosity normal

    deploy:
        runs-on: ubuntu-latest

        needs: [test]

        steps:
            - name: Checkout Code
              uses: actions/checkout@v2

            - name: Set NuGet package version
              run: echo "PACKAGE_VERSION=$(echo ${{ github.ref }} | sed 's/refs\/tags\///')" >> $GITHUB_ENV

            - name: Set up .NET
              uses: actions/setup-dotnet@v2

            - name: Create NuGet package
              run: |
                  cd Moodle.Net
                  dotnet pack --configuration Release -p:Version=$PACKAGE_VERSION

            - name: Create Release
              run: |
                  echo "//nuget.pkg.github.com/tschokri/index.json" > NuGet.Config.xml
                  dotnet nuget add source "https://nuget.pkg.github.com/tschokri/index.json" --name github
                  cd /home/runner/work/Moodle.Net/Moodle.Net/Moodle.Net/bin/Release/
                  dotnet nuget push ./*.nupkg --source github -k ${{ secrets.GITHUB_TOKEN }}
